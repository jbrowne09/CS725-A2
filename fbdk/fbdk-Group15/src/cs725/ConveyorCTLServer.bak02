<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="ConveyorCTLServer" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_OUT" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_OUT" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="TOKEN" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_OUT" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="STOP" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="START" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="REQUEST" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="RELEASE" >
        <With Var="BlockCon" />
        <With Var="MotoRotate" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="PE_OUT" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="IDLE" Comment="Initial State" x="4461.111" y="672.22217" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="4444.4443" y="400.0" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WANT" x="1983.3333" y="672.22217" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
        <ECAction Output="REQUEST" />
      </ECState>
      <ECState Name="RECEIVED" x="777.7778" y="650.0" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WAIT_NEXT" x="3138.8887" y="3027.7776" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="SEND_BAG" x="777.7778" y="1438.8888" >
      </ECState>
      <ECState Name="RELEASE" x="783.3333" y="1749.9999" >
      </ECState>
      <ECState Name="RELEASE_AND_WANT" x="366.66666" y="2188.889" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="RELEASE_TOKEN" x="4483.333" y="1949.9999" >
        <ECAction Output="RELEASE" />
      </ECState>
      <ECState Name="RELEASE_TOKEN_AND_WANT" x="1983.3333" y="2211.111" >
        <ECAction Output="RELEASE" />
      </ECState>
      <ECTransition Source="IDLE" Destination="INIT" Condition="INIT" x="4455.555" y="511.11108" />
      <ECTransition Source="INIT" Destination="IDLE" Condition="1" x="4027.7776" y="400.0" />
      <ECTransition Source="WANT" Destination="RECEIVED" Condition="TOKEN" x="1305.5555" y="300.0" />
      <ECTransition Source="RECEIVED" Destination="SEND_BAG" Condition="REQ&#38;PE" x="777.7778" y="994.4444" />
      <ECTransition Source="SEND_BAG" Destination="WAIT_NEXT" Condition="REQ&#38;!PE" x="3138.8887" y="1438.8888" />
      <ECTransition Source="WAIT_NEXT" Destination="RELEASE_AND_WANT" Condition="REQ&#38;!PE_OUT" x="372.2222" y="3027.7776" />
      <ECTransition Source="SEND_BAG" Destination="RELEASE" Condition="REQ&#38;!PE_OUT" x="783.3333" y="1600.0" />
      <ECTransition Source="RELEASE_TOKEN" Destination="IDLE" Condition="1" x="4472.222" y="1122.2222" />
      <ECTransition Source="RELEASE" Destination="RELEASE_TOKEN" Condition="REQ&#38;PE_OUT" x="783.3333" y="1949.9999" />
      <ECTransition Source="RELEASE_TOKEN_AND_WANT" Destination="WANT" Condition="1" x="1988.8888" y="1633.3333" />
      <ECTransition Source="RELEASE_AND_WANT" Destination="RELEASE_TOKEN_AND_WANT" Condition="REQ&#38;PE_OUT" x="1244.4443" y="2777.7776" />
      <ECTransition Source="RELEASE" Destination="RELEASE_AND_WANT" Condition="REQ&#38;!PE" x="366.66666" y="1755.5555" />
      <ECTransition Source="IDLE" Destination="WANT" Condition="REQ&#38;!PE" x="3616.6665" y="672.22217" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE THEN&#10;IF NOT PE THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
